
Step: 1 add kernel modules and enable IP forwarding(Run it on MASTER & WORKER Nodes)

cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

sudo modprobe overlay
sudo modprobe br_netfilter

# sysctl params required by setup, params persist across reboots
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward                 = 1
EOF

# Apply sysctl params without reboot
sudo sysctl --system

Step: 2 --> Disable Swap (Run it on MASTER & WORKER Nodes)

sudo swapoff -a
(crontab -l 2>/dev/null; echo "@reboot /sbin/swapoff -a") | crontab - || true


Step: 3 --> Run OS update (Run it on MASTER & WORKER Nodes)

sudo apt-get update -y
sudo apt-get install -y software-properties-common curl apt-transport-https ca-certificates

Step: 4 --> Download the GPG key for the Cri-O runtime and install,update,enable os boot also start the Cri-O service (Run it on MASTER & WORKER Nodes)

curl -fsSL https://pkgs.k8s.io/addons:/cri-o:/prerelease:/main/deb/Release.key |
    gpg --dearmor -o /etc/apt/keyrings/cri-o-apt-keyring.gpg
echo "deb [signed-by=/etc/apt/keyrings/cri-o-apt-keyring.gpg] https://pkgs.k8s.io/addons:/cri-o:/prerelease:/main/deb/ /" |
    tee /etc/apt/sources.list.d/cri-o.list

sudo apt-get update -y
sudo apt-get install -y cri-o

sudo systemctl daemon-reload
sudo systemctl enable crio --now
sudo systemctl start crio.service


VERSION="v1.28.0"
wget https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-$VERSION-linux-amd64.tar.gz
sudo tar zxvf crictl-$VERSION-linux-amd64.tar.gz -C /usr/local/bin
rm -f crictl-$VERSION-linux-amd64.tar.gz

Step: 5 --> Install Kubeadm & Kubelet & Kubectl (Run it on MASTER & WORKER Nodes)

Download the GPG key for the Kubernetes APT repository on all the nodes.

KUBERNETES_VERSION=1.29

sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://pkgs.k8s.io/core:/stable:/v$KUBERNETES_VERSION/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v$KUBERNETES_VERSION/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list

Update apt repo


sudo apt-get update -y


sudo apt-get install -y kubelet=1.29.0-1.1 kubectl=1.29.0-1.1 kubeadm=1.29.0-1.1


sudo apt-get install -y jq

Step: 6 Set the following environment variables. Replace 10.56.0.2 with the IP of your master node.

IPADDR="10.56.0.2"
NODENAME=$(hostname -s)
POD_CIDR="192.168.0.0/16"

Step: 7 initialize the master node control plane configurations using the kubeadm command.

sudo kubeadm init --apiserver-advertise-address=$IPADDR  --apiserver-cert-extra-sans=$IPADDR  --pod-network-cidr=$POD_CIDR --node-name $NODENAME --ignore-preflight-errors Swap

Step: 8 Run the following commands on master node for using kubectl CLI

mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

Step: 9 Use the following command on worker node with root user to join the exising cluster. 

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 10.156.0.2:6443 --token hmi191.peh53p77kk40h9if \
        --discovery-token-ca-cert-hash sha256:bf86af7bad7c964ff4255a5d1e70ff603506bbfa402c3289ca47bb8ab5bf90bc

or use the following command on master node to generate new token for adding worker node to the master node:

kubeadm token create --print-join-command
		
-----Some commands for checking the cluster status-------
kubectl get po -n kube-system
kubectl get --raw='/readyz?verbose'
kubectl cluster-info


step: 10 Install Calico Network Plugin for Pod Networking
Kubeadm does not configure any network plugin. You need to install a network plugin of your choice for kubernetes pod networking and enable network policy.

kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

Step: 11 Setup Kubernetes Metrics Server

kubectl apply -f https://raw.githubusercontent.com/techiescamp/kubeadm-scripts/main/manifests/metrics-server.yaml

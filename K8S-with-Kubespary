Prerequisites: 

Disable IPv6 on master and worker nodes: 

$sudo  vi /etc/sysctl.conf

# Disable IPv6
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
net.ipv6.conf.lo.disable_ipv6 = 1

$ sudo sysctl -p



Install Kubespray

1. Install Git if not already present on the control machine:

sudo apt install git


2. Clone the Kubespray repo:

 git clone https://github.com/kubernetes-sigs/kubespray.git

This will create a kubespray directory with the code.


3. Change into the kubespray directory:
 cd kubespray


4. Create and activate a Python virtualenv (recommended):

sudo     apt install python3.10-venv
python3 -m venv .venv
source .venv/bin/activate
 
5. Install the Python requirements:

 pip install -r requirements.txt
 
This will install Ansible and other dependencies needed to run Kubespray.

6. 

sudo wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -


apt list --upgradable


ansible --version
================================================================================

Configure key-based login between master and worker nodes: 

on Master node: 
 hossaind@k8s-ubuntu-master-01:~$ ssh-keygen
Generating public/private rsa key pair.
Enter file in which to save the key (/home/hossaind/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/hossaind/.ssh/id_rsa
Your public key has been saved in /home/hossaind/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:3EMTO1YZLEpggnllxM6gPiWP0OSrvmxgGvIKKgdf4XY hossaind@k8s-ubuntu-master-01
The key's randomart image is:
+---[RSA 3072]----+
|   o.+*.  ..oo   |
|  + o+. . .+o    |
| + o + . .*.     |
|. = o o..+ o     |
| o B .  S o      |
|=.= = E    .     |
|** + .           |
|B.+              |
|**.              |
+----[SHA256]-----+

hossaind@k8s-ubuntu-master-01:~$ cd .ssh/
hossaind@k8s-ubuntu-master-01:~/.ssh$ ls
authorized_keys  id_rsa  id_rsa.pub  known_hosts
hossaind@k8s-ubuntu-master-01:~/.ssh$ cat id_rsa.pub
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDgVmCoLNJwDcoAcpRCHl2bqBythGZ5g/wRkU7lHMxK                                                                                                                                                                                                            edrk1WA/KdfI+GpQ8mUxkVtoou7tmYM2fgFJYSjs6xjVcGpIXoDSStB+9f61DoEwvtEvNtk6TdJVHQ74                                                                                                                                                                                                            fEqrSGDGuklpaBAVRu2YfzYmfUkL4CFwmurKfRyewJXzEKMh8rzFHIAhqio0ywzmMhX8WAGRc3wgKqM8                                                                                                                                                                                                            wHSyTGaU9jro3Rx/er5xFOQLktX1Gz4OpwRGw32OKIQ44l+CT8wSMcE3GZMHZcgOYJEKo3pvDcK3A9Dc                                                                                                                                                                                                            cIWEV9YmYoEn/3tryJIGhJfH1zNTFvO6/wl91132yx1sg1cgL/diXJ/SAj+LfctnYaQ/lsHCCS7UfRSK                                                                                                                                                                                                            Vtdd4FdT9qP0hqgTR3wjKKTEJhLidiAa2uDtJv6E9y3UHcjGrAxIqYcGiO1QnnM7XO9pk8I45K/LdvpU                                                                                                                                                                                                            to078Kkr7MIqHOjE2TvJnXxU6TWSYuC5QV0Huy4c5FPFYWi4LpXA6JasqtUE6/M7z545Tvc= hossain                                                                                                                                                                                                            d@k8s-ubuntu-master-01


copy this key to the authorized_keys file on workers nodes. 

Do the same for others nodes. 

====================================================================================

Configure the Inventory

The inventory file tells Ansible which machines to connect to and how to configure Kubernetes across the nodes.
1. Copy the example inventory:

 cp -r inventory/sample inventory/mycluster
 
 ==================***************************=====================================
 declare -a IPS=(10.0.156.4 10.0.156.7)
 CONFIG_FILE=inventory/mycluster/hosts.yaml python3 contrib/inventory_builder/inventory.py ${IPS[@]}
 
 Now check the host file : 
 vi inventory/mycluster/hosts.yaml
 
List each node and IP address under [all]
Assign master nodes under [kube-master]
Assign worker nodes under [kube-node]
Add any other groups like [etcd] or [calico-rr]
 ==================***************************=====================================

2. Update k8s-cluster.yml file based on your requirements

sudo vim inventory/mycluster/group_vars/k8s_cluster/k8s-cluster.yml

In this file check for the following: 

==> Kubernetes version to be installed. (kube_version)
==> Netwrok plugin to be used (kube_network_plugin)
==> kube service IP address range (kube_service_addresses)
==> Pods internal IP address range (kube_pods_subnet)
==> Cluster Name (cluster_name)

3. Update addons.yml file based on your requirements

sudo vi inventory/mycluster/group_vars/k8s_cluster/addons.yml

==> Enable metrics server (metrics_server_enabled)
==> Enable Dashboard (dashboard_enabled)
==> Enable ingress (ingress_nginx_enabled)
==> Ingress nginx host network (ingress_nginx_host_network)


4. Executle following ansible command for disable firewall, enable IP forwarding and disable swap across all the nodes. 

$ cd kubespray
$ ansible all -i inventory/mycluster/hosts.yaml -m shell -a "sudo systemctl stop firewalld && sudo systemctl disable firewalld"
$ ansible all -i inventory/mycluster/hosts.yaml -m shell -a "echo 'net.ipv4.ip_forward=1' | sudo tee -a /etc/sysctl.conf"
$ ansible all -i inventory/mycluster/hosts.yaml -m shell -a "sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab && sudo swapoff -a"
-------------------------------------------------------------------------------------
command output: 
hossaind@k8s-ubuntu-master-01:~/kubespray$ ansible all -i inventory/mycluster/hosts.yaml -m shell -a "sudo systemctl stop firewalld && sudo systemctl disable firewalld"
node1 | FAILED | rc=5 >>
Failed to stop firewalld.service: Unit firewalld.service not loaded.non-zero return code
node2 | FAILED | rc=5 >>
Failed to stop firewalld.service: Unit firewalld.service not loaded.non-zero return code
hossaind@k8s-ubuntu-master-01:~/kubespray$ ansible all -i inventory/mycluster/hosts.yaml -m shell -a "echo 'net.ipv4.ip_forward=1' | sudo tee -a /etc/sysctl.conf"
node2 | CHANGED | rc=0 >>
net.ipv4.ip_forward=1
node1 | CHANGED | rc=0 >>
net.ipv4.ip_forward=1
hossaind@k8s-ubuntu-master-01:~/kubespray$ ansible all -i inventory/mycluster/hosts.yaml -m shell -a "sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab && sudo swapoff -a"
node1 | CHANGED | rc=0 >>

node2 | CHANGED | rc=0 >>

-------------------------------------------------------------------------------------

5. Finall run the ansible playbook to build the kubernetes cluster. 

cd kubespray
$ ansible-playbook -i inventory/mycluster/hosts.yaml --become --become-user=root cluster.yml